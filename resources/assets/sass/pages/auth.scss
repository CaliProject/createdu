@import "../mixins";
@import "../settings";
@import "../components/inputs";

/* Global Styles */

body {
  position: relative;
  height: 100% !important;
  width: 100%;
  font-family: $fonts;
  font-size: 14px;
  background: #fff;
  color: #4E5E6A;
}

html {
  height: 100% !important;
  position: relative;
}

*:hover,
*:active,
*:focus {
  outline: none !important;
}

/* Typography */
p {
  display: block;
  font-size: 13px;
  font-weight: normal;
  letter-spacing: normal;
  line-height: 22px;
  margin: 0px 0px 10px 0px;
  font-style: normal;
  white-space: normal;
}

.Auth {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;

  @include mod(sign-in) {

  }

  @include mod(sign-up) {

  }

  @include has(wrapper) {
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    width: 100%;
    height: 100%;
  }

  @include has(box) {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  @include has(logo) {
    max-width: 130px;
    max-height: 130px;
    margin: 1em;
    @include am(fadeInDown .35s backwards);

    img {
      width: 100%;
      height: 100%;
    }
  }

  @include has(title) {
    @include am(fadeInDown .35s backwards);
  }

  @include has(form) {
    width: $auth-form-width;
    padding: .3em 1em;

    .Input:last-of-type {
      @include am(fadeInDown .5s backwards);
    }

    @for $i from 1 through 3 {
        .Input:nth-of-type(#{$i}) {
          animation-delay: #{(0.19 * $i) + 0.15}s;
        }
    }
  }

  @include has(submit) {
    background: $themedarkblue;
    color: $themewhite;
    border: 0;
    width: 60px;
    height: 100%;
    border-radius: 50%;
    font-size: 1.5em;
    @include ts(background ease-in .2s);

    &:before {
      display: inline;
      content: "\f061";
      font-family: "FontAwesome";
      font-style: normal;
    }

    &.success, &.error {
      @include am(zoom .7s backwards);
    }

    &.success {
      background: $light-green;

      &:before {
        content: "\f00c";
      }
    }

    &.error {
      background: $light-red;

      &:before {
        content: "\f00d";
      }
    }

    &.loading {
      opacity: 0.3;
      cursor: not-allowed;

      @include am(fa-spin 2s infinite linear);

      &:before {
        content: "\f1ce";
      }
    }
  }

  @include has(separator) {
    width: 100%;
    height: 0;
    left: 0;
    top: 0;
    position: relative;
    margin: 1.5em 0;
    border-bottom: 1px solid rgba($themedarkblue, .2);

    &:before {
      content: '';
      width: 100%;
      height: 1px;
      display: block;
      position: absolute;
      bottom: -1px;
      left: 0;
      background: linear-gradient(90deg, #fff, rgba($themedarkblue, .2), #fff);
    }
  }

  @include has(extra) {
    width: 100%;
    padding: .5em 1.5em;
    @include am(fadeInDown 1.4s .4s backwards);
  }
}

@keyframes zoom {
  0% {
    transform: scale3d(1, 1, 1);
  }

  50% {
    transform: scale3d(1.15, 1.15, 1);
  }

  100% {
    transform: scale3d(1, 1, 1);
  }
}